class Happy{constructor(e={}){this.baseClasses={item:HappyItem,document:HappyDocument,form:HappyForm,field:HappyField,input:HappyInput},this.cleaners={},this.validators={},this.customClasses={documents:{},forms:{},fields:{},inputs:{}},this.initVars(),this.extend(e),window.Happy.instance=this}initVars(){this.items=[],this.inputs=[],this.fields=[],this.forms=[],this.documents=[],this.topLevelItems=[],this.currentField=void 0,this.nextId=1}extend(e={}){return Object.assign(this,e)}getClass(e,t){let s,i=e+"s";return t&&(s=this.customClasses[i][t]),s||this.baseClasses[e]}guessElementHappyType(e){return"form"===e.nodeName.toLowerCase()?"form":"document"}addItem(e,t={}){let s=e+"s",i=t.type,r=t.CustomClass||this.getClass(e,i);delete t.CustomClass,delete t.type;let l=new r(t,this);return i&&(l[e+"Type"]=i),l.isTopLevel&&this.topLevelItems.push(l),this[s]&&this[s].push(l),this.items.push(l),l}find(e,t=this.items){let s,i=0,r=t.length;if(r){for(;!s&&i<r;){let r=t[i];r.id!==e&&r.name!==e||(s=r),i++}return s}}focusUnhappy(e){let t=document.querySelector(e||".unhappy > input");t&&t.focus()}mount(e={}){if(!e.el)throw new Error("A mount element is required!");if(!this.items.length){let t=e.type;t?delete e.type:t=this.guessElementHappyType(e.el);let s=this.addItem(t,e);return s.mount(),s}this.topLevelItems.forEach(e=>e.mount())}dismount(){this.topLevelItems.forEach(e=>e.dismount()),this.initVars()}}class HappyRule{constructor(e){let t=e.split(":");this.name=t.shift(),this.args=t,this.arg=t.length?t[0]:void 0}}class HappyItem{constructor(e,t={},s){this.el=t.el,this.parent=t.parent,this.happyType=e,delete t.parent,delete t.el,this.options=t,this.happy$=s,this.parent||(this.isTopLevel=!0),this.name=this.options.name,this.id=this.options.id||this.extractId(),this.mounted=!1,this.children=[],this.happy=!0,this.nextId=1}rateLimit(e,t,s,i){let r=(new Date).getTime();r-(e.lastUpdated||0)>i&&(e.lastUpdated=r,t.apply(e,s))}ignoreBlur(){return this.isType(["checkbox","checklist","radiolist","select","file"])}setOpt(e,t,s){void 0===this.options[e]&&(this.options[e]=void 0!==t?t:s)}getOpt(e,t){return this.options[e]?this.options[e]:this.parent?this.parent.getOpt(e,t):t}isType(e){let t=this.happyType+"Type";return"string"==typeof e&&(e=[e]),e.includes(this[t])}isModified(){if("input"===this.happyType)return this.value!==this.initialValue;for(let e=0,t=this.children.length;e<t;e++)if(this.children[e].isModified())return!0;return!1}isHappy(){if("input"===this.happyType)return this.happy;for(let e=0,t=this.children.length;e<t;e++)if(!this.children[e].happy)return!1;return!0}getDomElement(){if(this.el)return this.el;if(this.options.selector){return(this.parent?this.parent.el:document.body).querySelector(this.options.selector)}}getValue(e){var t=this.extractValue();let s=this.clean(t);return e&&(this.initialValue=s),s}extractId(){let e;switch(this.happyType){case"input":e="i";break;case"field":e="f";break;case"document":e="doc";break;default:e=this.happyType}return this.parent&&this.parent.nextId?this.parent.id+"_"+e+this.parent.nextId++:e+this.happy$.nextId++}extractType(){return this.inputs.length?this.inputs[0].inputType:"text"}extractName(){return this.el.getAttribute("data-name")||this.el.name||this.el.id}extractLabel(){return this.el.getAttribute("data-label")}extractValue(){let e;switch(this.inputType){case"radio":case"checkbox":e=this.el.checked?this.el.value||1:"";break;case"option":e=this.el.selected?this.el.value||1:"";break;default:e=this.el.value}return e}extractRules(){let e=this;this.rules=this.rules||{};let t=this.el.getAttribute("data-validate");(t?t.split("|"):[]).forEach(function(t){let s=new HappyRule(t);e.rules[s.name]=s}),!this.rules.required&&this.el.hasAttribute("required")&&(this.rules.required=new HappyRule("required")),!this.rules.required&&this.el.classList.contains("required")&&(this.rules.required=new HappyRule("required"))}extractCleaners(){let e=this.el.getAttribute("data-format");e&&(this.cleaners=e.split("|"))}clean(e){if(!e)return e;let t=e.trim();if(!this.cleaners)return t;for(let e=0,s=this.cleaners.length;e<s;e++){let s=this.happy$.cleaners[this.cleaners[e]];s&&(t=s.call(this,t))}return t}getNext(e){if(this.isTopLevel)return;let t=this.parent,s=t.children.length;if(s<2){if(t.isTopLevel)return;let e=t.getNext();if(e&&e.children.length)return e.children[0]}let i=t.children.indexOf(this)+1;if(i>=s){if(e){let e=t.getNext();if(e&&e.children.length)return e.children[0]}return t.children[0]}return t.children[i]}getPrev(e){if(this.isTopLevel)return;let t=this.parent.children.length;if(t<2)return;let s=this.parent.children.indexOf(this);if(!s){if(e){let e=this.parent.getPrev();if(e&&e.children.length)return e.children[e.children.length-1]}return this.parent.children[t-1]}return this.parent.children[s-1]}validate(e,t){let s=[],i=this.getOpt("validate");if(this.happy=!0,i)s=i(e,t);else{let e=this.happy$;if(this.subValidateInputs){let i=[];for(let e=0,t=this.inputs.length;e<t;e++){let t=this.inputs[e];for(let e in t.rules)if(t.rules.hasOwnProperty(e)){i.push(t);break}}for(let r=0,l=i.length;r<l;r++){let i=!0,l=this.inputs[r];for(let r in l.rules){let n=l.rules[r],a=e.validators[n.name];if(a){let e=a.call(l,n,t);e&&("required"===n.name?s.unshift({item:l,message:e}):s.push({item:l,message:e}),i=!1,this.happy=!1)}}l.happy=i}}for(let i in this.rules){let r=this.rules[i],l=e.validators[r.name];if(l){let e=l.call(this,r,t);e&&("required"===r.name?s.unshift({item:this,message:e}):s.push({item:this,message:e}),this.happy=!1)}}}return s}bindEvents(){this.isTopLevel&&(this.el.addEventListener("focus",this.onFocusHandler,!0),this.el.addEventListener("blur",this.onBlurHandler,!0),this.el.addEventListener("change",this.onChangeHandler,!0),this.el.addEventListener("keydown",this.onKeyDownHandler,!0),this.el.addEventListener("submit",this.onSubmitHandler,!0))}unbindEvents(){this.isTopLevel&&(this.el.removeEventListener("submit",this.onSubmitHandler,!0),this.el.removeEventListener("keydown",this.onKeyDownHandler,!0),this.el.removeEventListener("change",this.onChangeHandler,!0),this.el.removeEventListener("blur",this.onBlurHandler,!0),this.el.removeEventListener("focus",this.onFocusHandler,!0))}onFocusHandler(e){let t=e.target.HAPPY;if(!t||"input"!==t.happyType)return;let s=t.parent,i=t.happy$;if(s===i.currentField&&s.ignoreBlur())return clearTimeout(s.delayBlurEventTimer);i.currentField=s}onBlurHandler(e){let t=e.target.HAPPY;if(!t||"input"!==t.happyType)return;let s=t.parent;s.delayBlurEventTimer=setTimeout(function(){s.rateLimit(s,s.update,[e,"onBlur"],150)})}onChangeHandler(e){let t=e.target.HAPPY;if(!t||"input"!==t.happyType)return;let s=t.parent;s.rateLimit(s,s.update,[e,"onChange"],150)}onKeyDownHandler(e){let t=e.target.HAPPY;if(!t||"input"!==t.happyType)return;let s=t.parent;if("Enter"===e.key||13==e.when||13==e.keyCode){if(s.isType("memo"))return;let i;if(e.stopImmediatePropagation(),e.preventDefault(),s.isType(["checkbox","checklist","radiolist"])&&t.el.click(),"radiolist"===s.fieldType){let e=s.getNext(!0);e&&(i=e.inputs[0])}else i=t.getNext(!0);i&&i.el.focus()}else if("ArrowDown"===e.key&&s.isType("checklist")){let e=t.getNext();e&&e.el.focus()}else if("ArrowUp"===e.key&&s.isType("checklist")){let e=t.getPrev();e&&e.el.focus()}}onSubmitHandler(e){F1.console.log("HappyItem::onSubmitHandler()",e),e.target.HAPPY.update(e,"onSubmit"),this.happy||(e.preventDefault(),e.stopPropagation())}removeMessages(){let e=this.el,t="."+this.getOpt("messageGroupClass","messages");e.querySelectorAll(t).forEach(e=>e.parentElement.removeChild(e)),this.inputs.forEach(e=>e.messages=[]),this.messages=[]}addMessages(e){let t,s,i,r,l,n=this.getOpt("messageGroupClass","messages"),a=this.getOpt("messageClass","message error");for(let h=0,p=e.length;h<p;h++)(l=(r=e[h]).item||this).messages=l.messages||[],l.elMsgGrp||((s=document.createElement("li")).className=a,(i="input"===l.happyType?l.el.parentElement:l.el.querySelector(".input-group"))||(i=l.el),l.elMsgGrp||(l.elMsgGrp=document.createElement("ul"),l.elMsgGrp.className=n,i.appendChild(l.elMsgGrp)),t=r.message,s.innerHTML=t,l.elMsgGrp.appendChild(s),l.messages.push({el:s,elParent:i,text:t}));for(let t=0,s=e.length;t<s;t++)(r=e[t]).item&&delete r.item.elMsgGrp;delete this.elMsgGrp}renderState(){let e=this.getOpt("happyClass","happy"),t=this.getOpt("unhappyClass","unhappy"),s="input"===this.happyType?this.el.parentElement:this.el;this.isHappy()?(s.classList.add(e),s.classList.remove(t)):(s.classList.add(t),s.classList.remove(e));let i=this.getOpt("modifiedClass","modified");this.modified?s.classList.add(i):s.classList.remove(i)}render(){return document.createElement("div")}update(e,t){if(this.value=this.getValue(),this.modified=this.isModified(),"isParent"===t)this.happy=this.isHappy();else{let s=this.validate(e,t)||[];this.removeMessages(),this.addMessages(s);for(let e=0,t=this.inputs.length;e<t;e++){let t=this.inputs[e];t.modified=t.isModified(),t.renderState()}}this.renderState(),this.isTopLevel||this.parent.update(e,"isParent")}mount(e={}){if(this.mounted)return;let t=this.parent||{},s=e.appendTo;this.el=this.el||this.getDomElement()||e.el,this.el||(s||(s=t.el||document.body),this.el=this.render(),s.append(this.el),this.isRenderedElement=!0),this.el.HAPPY=this,this.isTopLevel&&F1.console.log("Happy[",this.happyType,"]::mount() - ok",this),this.mounted=!0,this.bindEvents()}dismount(){this.el&&this.isRenderedElement?(this.el.parentElement.removeChild(this.el),this.el=void 0):this.el&&delete this.el.HAPPY,this.children&&(this.children.forEach(e=>e.dismount()),this.children=void 0),this.nextId=1,this.mounted=!1,this.isRenderedElement||this.unbindEvents()}}class HappyInput extends HappyItem{constructor(e,t){super("input",e,t)}extractLabel(){let e=this.el.previousElementSibling;if(e&&"LABEL"===e.nodeName)return e.innerHTML.replace(/\s*:$/,"")}extractRules(){if(super.extractRules(),this.el.hasAttribute("min")){let e=this.el.getAttribute("min");this.rules.min=new HappyRule("min:"+e)}if(this.el.hasAttribute("max")){let e=this.el.getAttribute("max");this.rules.max=new HappyRule("max:"+e)}if(this.el.hasAttribute("pattern")){let e=this.el.getAttribute("pattern");this.rules.pattern=new HappyRule("pattern:"+e)}}mount(e){super.mount(e),this.extractRules(),this.extractCleaners(),this.value=this.getValue("init"),this.name=this.extractName(),this.label=this.extractLabel()}}class HappyField extends HappyItem{constructor(e,t){super("field",e,t)}getValue(e){let t=[];for(let s=0,i=this.inputs.length;s<i;s++){let i=this.inputs[s];i.value=i.getValue(e),(i.value||0===i.value)&&t.push(i.value)}let s=t.join(",");return e&&(this.initialValue=s),s}extractName(){let e;return e=1===this.inputs.length?this.inputs[0].name:this.el.getAttribute("data-name")||this.el.id}extractInputType(e){return e.getAttribute("data-type")||e.type}extractInputs(){let e=this;e.inputs=[];let t=e.getOpt("inputSelector",'input:not(hidden):not([type="submit"]), textarea, select'),s=e.el.querySelectorAll(t);for(let t=0,i=s.length;t<i;t++){let i=s[t],r=e.extractInputType(i),l=e.happy$.addItem("input",{el:i,type:r,parent:e});e.inputs.push(l)}e.children=e.inputs}mount(e){super.mount(e),this.extractRules(),this.extractCleaners(),this.extractInputs(),this.inputs.forEach(e=>e.mount()),this.fieldType=this.fieldType||this.extractType(),this.value=this.getValue("init"),this.name=this.extractName(),this.label=this.extractLabel()}dismount(){super.dismount(),this.inputs=void 0}}class HappyForm extends HappyItem{constructor(e,t){super("form",e,t)}getValue(){let e={};for(let t=0,s=this.fields.length;t<s;t++){let s=this.fields[t];e[s.name||s.id]=s.value}return e}extractFieldType(e){return e.getAttribute("data-type")}extractFields(){let e=this;e.fields=[];let t=e.getOpt("fieldSelector",".field"),s=e.el.querySelectorAll(t);for(let t=0,i=s.length;t<i;t++){let i=s[t],r=e.extractFieldType(i),l=e.happy$.addItem("field",{el:i,type:r,parent:e});e.fields.push(l)}e.children=e.fields}mount(e){super.mount(e),this.extractFields(),this.fields.forEach(e=>e.mount())}dismount(){super.dismount(),this.fields=void 0}}class HappyDocument extends HappyItem{constructor(e,t){super("document",e,t)}extractFormType(e){return e.getAttribute("data-type")}extractForms(){let e=this;e.forms=[];let t=e.getOpt("formSelector","form"),s=e.el.querySelectorAll(t);for(let t=0,i=s.length;t<i;t++){let i=s[t],r=e.extractFormType(i),l=e.happy$.addItem("form",{el:i,type:r,parent:e});e.forms.push(l)}e.children=e.forms}mount(e){super.mount(e),this.extractForms(),this.forms.forEach(e=>e.mount())}dismount(){super.dismount(),this.forms=void 0}}window.Happy=Happy;